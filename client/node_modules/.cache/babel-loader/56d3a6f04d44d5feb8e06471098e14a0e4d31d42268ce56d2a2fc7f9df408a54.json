{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Vocabulary\\\\vocab-builder\\\\client\\\\src\\\\pages\\\\Vocabulary.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Vocabulary.css';\nimport { generateDefinition } from '../services/generateDefinition';\nimport { deleteWord } from '../services/vocabService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000/api/vocab';\nconst Vocabulary = () => {\n  _s();\n  const [vocabularyList, setVocabularyList] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [newWord, setNewWord] = useState('');\n  const [definition, setDefinition] = useState('');\n  const [exampleSentence, setExampleSentence] = useState('');\n  const [suggestedWords, setSuggestedWords] = useState([]);\n  const [userLevel, setUserLevel] = useState('beginner');\n  const navigate = useNavigate();\n\n  // Fetch suggested words with review score 1-2\n  useEffect(() => {\n    const fetchWordSuggestions = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/suggestions/${userLevel}`);\n        setSuggestedWords(response.data.filter(word => word.reviewScore <= 2));\n      } catch (error) {\n        console.error('Error fetching word suggestions:', error);\n      }\n    };\n    fetchWordSuggestions();\n  }, [userLevel]);\n\n  // Fetch vocabulary words for the user\n  useEffect(() => {\n    const fetchVocabulary = async () => {\n      try {\n        const userIdFromStorage = localStorage.getItem('userId');\n        if (userIdFromStorage) {\n          setUserId(userIdFromStorage);\n          const response = await axios.get(`${API_URL}?userId=${userIdFromStorage}`);\n          setVocabularyList(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching vocabulary:', error);\n      }\n    };\n    fetchVocabulary();\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('userId');\n    navigate('/');\n  };\n  const handleAddClick = () => {\n    setShowAddForm(true);\n  };\n  const handleGenerateDefinition = async () => {\n    try {\n      const definitionData = await generateDefinition(newWord);\n      setDefinition(definitionData.definition);\n    } catch (error) {\n      console.error('Error generating definition:', error);\n    }\n  };\n  const handleAddWord = async () => {\n    try {\n      const wordData = {\n        word: newWord,\n        definition,\n        exampleSentence,\n        userId\n      };\n      const response = await axios.post(`${API_URL}`, wordData);\n      setVocabularyList([...vocabularyList, response.data]);\n      handleCancel();\n    } catch (error) {\n      console.error('Error adding word:', error);\n    }\n  };\n  const handleCancel = () => {\n    setShowAddForm(false);\n    setNewWord('');\n    setDefinition('');\n    setExampleSentence('');\n  };\n  const handleDeleteWord = async id => {\n    try {\n      await deleteWord(id);\n      setVocabularyList(vocabularyList.filter(vocab => vocab._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting word:\", error);\n    }\n  };\n  const handleUpdateWord = id => {\n    navigate(`/update-word/${id}`);\n  };\n  const handleScoreChange = async (id, newScore) => {\n    if (newScore > 5) return; // Prevent reviewScore from exceeding 5\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, {\n        reviewScore: newScore\n      });\n      setVocabularyList(vocabularyList.map(vocab => vocab._id === id ? {\n        ...vocab,\n        reviewScore: response.data.reviewScore\n      } : vocab));\n    } catch (error) {\n      console.error(\"Error updating score:\", error);\n    }\n  };\n\n  // Add suggested word to user's vocabulary list\n  const handleAddSuggestedWord = async suggestedWord => {\n    try {\n      const wordData = {\n        ...suggestedWord,\n        userId\n      }; // Add userId to suggested word data\n      delete wordData._id; // Remove _id from suggested word data\n      const response = await axios.post(`${API_URL}`, wordData);\n      setVocabularyList([...vocabularyList, response.data]);\n    } catch (error) {\n      console.error('Error adding suggested word:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulary-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddClick,\n        children: \"Add Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vocabulary-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Vocabulary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-word-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Word\",\n          value: newWord,\n          onChange: e => setNewWord(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGenerateDefinition,\n          children: \"Generate Definition\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Definition\",\n          value: definition,\n          onChange: e => setDefinition(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Example Sentence\",\n          value: exampleSentence,\n          onChange: e => setExampleSentence(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddWord,\n          children: \"Save Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vocabulary-cards\",\n        children: vocabularyList.map(vocab => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"vocabulary-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: vocab.word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Definition:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 18\n            }, this), \" \", vocab.definition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Example Sentence:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 18\n            }, this), \" \", vocab.exampleSentence]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Review Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 18\n            }, this), \" \", vocab.reviewScore]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleScoreChange(vocab._id, Math.min(vocab.reviewScore + 1, 5)),\n              children: \"\\uD83D\\uDC4D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleScoreChange(vocab._id, Math.max(0, vocab.reviewScore - 1)),\n              children: \"\\uD83D\\uDC4E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdateWord(vocab._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDeleteWord(vocab._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this)]\n        }, vocab._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Suggested Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggested-words-list\",\n          children: suggestedWords.map(word => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"vocabulary-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Definition:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 20\n              }, this), \" \", word.definition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Review Score:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 20\n              }, this), \" \", word.reviewScore]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddSuggestedWord(word),\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, word._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Vocabulary, \"gCKhNuNEdHj+kRK+IeM7RmjJfSU=\", false, function () {\n  return [useNavigate];\n});\n_c = Vocabulary;\nexport default Vocabulary;\nvar _c;\n$RefreshReg$(_c, \"Vocabulary\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","generateDefinition","deleteWord","jsxDEV","_jsxDEV","API_URL","Vocabulary","_s","vocabularyList","setVocabularyList","userId","setUserId","showAddForm","setShowAddForm","newWord","setNewWord","definition","setDefinition","exampleSentence","setExampleSentence","suggestedWords","setSuggestedWords","userLevel","setUserLevel","navigate","fetchWordSuggestions","response","get","data","filter","word","reviewScore","error","console","fetchVocabulary","userIdFromStorage","localStorage","getItem","handleLogout","removeItem","handleAddClick","handleGenerateDefinition","definitionData","handleAddWord","wordData","post","handleCancel","handleDeleteWord","id","vocab","_id","handleUpdateWord","handleScoreChange","newScore","put","map","handleAddSuggestedWord","suggestedWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","required","Math","min","max","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Vocabulary/vocab-builder/client/src/pages/Vocabulary.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Vocabulary.css';\r\nimport { generateDefinition } from '../services/generateDefinition';\r\nimport { deleteWord } from '../services/vocabService';\r\n\r\nconst API_URL = 'http://localhost:3000/api/vocab';\r\n\r\nconst Vocabulary = () => {\r\n  const [vocabularyList, setVocabularyList] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [newWord, setNewWord] = useState('');\r\n  const [definition, setDefinition] = useState('');\r\n  const [exampleSentence, setExampleSentence] = useState('');\r\n  const [suggestedWords, setSuggestedWords] = useState([]);\r\n  const [userLevel, setUserLevel] = useState('beginner');\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch suggested words with review score 1-2\r\n  useEffect(() => {\r\n    const fetchWordSuggestions = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/suggestions/${userLevel}`);\r\n        setSuggestedWords(response.data.filter(word => word.reviewScore <= 2));\r\n      } catch (error) {\r\n        console.error('Error fetching word suggestions:', error);\r\n      }\r\n    };\r\n\r\n    fetchWordSuggestions();\r\n  }, [userLevel]);\r\n\r\n  // Fetch vocabulary words for the user\r\n  useEffect(() => {\r\n    const fetchVocabulary = async () => {\r\n      try {\r\n        const userIdFromStorage = localStorage.getItem('userId');\r\n        if (userIdFromStorage) {\r\n          setUserId(userIdFromStorage);\r\n          const response = await axios.get(`${API_URL}?userId=${userIdFromStorage}`);\r\n          setVocabularyList(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching vocabulary:', error);\r\n      }\r\n    };\r\n    fetchVocabulary();\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('userId');\r\n    navigate('/');\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setShowAddForm(true);\r\n  };\r\n\r\n  const handleGenerateDefinition = async () => {\r\n    try {\r\n      const definitionData = await generateDefinition(newWord);\r\n      setDefinition(definitionData.definition);\r\n    } catch (error) {\r\n      console.error('Error generating definition:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddWord = async () => {\r\n    try {\r\n      const wordData = { word: newWord, definition, exampleSentence, userId };\r\n      const response = await axios.post(`${API_URL}`, wordData);\r\n      setVocabularyList([...vocabularyList, response.data]);\r\n      handleCancel();\r\n    } catch (error) {\r\n      console.error('Error adding word:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setShowAddForm(false);\r\n    setNewWord('');\r\n    setDefinition('');\r\n    setExampleSentence('');\r\n  };\r\n\r\n  const handleDeleteWord = async (id) => {\r\n    try {\r\n      await deleteWord(id);\r\n      setVocabularyList(vocabularyList.filter((vocab) => vocab._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting word:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateWord = (id) => {\r\n    navigate(`/update-word/${id}`);\r\n  };\r\n\r\n  const handleScoreChange = async (id, newScore) => {\r\n    if (newScore > 5) return;  // Prevent reviewScore from exceeding 5\r\n    try {\r\n      const response = await axios.put(`${API_URL}/${id}`, { reviewScore: newScore });\r\n      setVocabularyList(vocabularyList.map((vocab) =>\r\n        vocab._id === id ? { ...vocab, reviewScore: response.data.reviewScore } : vocab\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error updating score:\", error);\r\n    }\r\n  };\r\n\r\n  // Add suggested word to user's vocabulary list\r\n  const handleAddSuggestedWord = async (suggestedWord) => {\r\n    try {\r\n      const wordData = { ...suggestedWord, userId };  // Add userId to suggested word data\r\n      delete wordData._id;  // Remove _id from suggested word data\r\n      const response = await axios.post(`${API_URL}`, wordData);\r\n      setVocabularyList([...vocabularyList, response.data]);\r\n    } catch (error) {\r\n      console.error('Error adding suggested word:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"vocabulary-container\">\r\n      <div className=\"sidebar\">\r\n        <h3>Menu</h3>\r\n        <button onClick={handleAddClick}>Add Word</button>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n\r\n      <div className=\"vocabulary-content\">\r\n        <h2>Your Vocabulary</h2>\r\n\r\n        {showAddForm && (\r\n          <div className=\"add-word-form\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Word\"\r\n              value={newWord}\r\n              onChange={(e) => setNewWord(e.target.value)}\r\n              required\r\n            />\r\n            <button onClick={handleGenerateDefinition}>Generate Definition</button>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Definition\"\r\n              value={definition}\r\n              onChange={(e) => setDefinition(e.target.value)}\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Example Sentence\"\r\n              value={exampleSentence}\r\n              onChange={(e) => setExampleSentence(e.target.value)}\r\n            />\r\n            <button onClick={handleAddWord}>Save Word</button>\r\n            <button onClick={handleCancel}>Cancel</button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"vocabulary-cards\">\r\n          {vocabularyList.map((vocab) => (\r\n            <div key={vocab._id} className=\"vocabulary-card\">\r\n              <h3>{vocab.word}</h3>\r\n              <p><strong>Definition:</strong> {vocab.definition}</p>\r\n              <p><strong>Example Sentence:</strong> {vocab.exampleSentence}</p>\r\n              <p><strong>Review Score:</strong> {vocab.reviewScore}</p>\r\n              <div className=\"card-actions\">\r\n                <button onClick={() => handleScoreChange(vocab._id, Math.min(vocab.reviewScore + 1, 5))}>👍</button>\r\n                <button onClick={() => handleScoreChange(vocab._id, Math.max(0, vocab.reviewScore - 1))}>👎</button>\r\n                <button onClick={() => handleUpdateWord(vocab._id)}>Update</button>\r\n                <button onClick={() => handleDeleteWord(vocab._id)}>Delete</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Suggested Words Section */}\r\n        <div className=\"suggested-words\">\r\n          <h2>Suggested Words</h2>\r\n          <div className=\"suggested-words-list\">\r\n            {suggestedWords.map((word) => (\r\n              <div key={word._id} className=\"vocabulary-card\">\r\n                <h3>{word.word}</h3>\r\n                <p><strong>Definition:</strong> {word.definition}</p>\r\n                <p><strong>Review Score:</strong> {word.reviewScore}</p>\r\n                <div className=\"card-actions\">\r\n                  <button onClick={() => handleAddSuggestedWord(word)}>+</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Vocabulary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}