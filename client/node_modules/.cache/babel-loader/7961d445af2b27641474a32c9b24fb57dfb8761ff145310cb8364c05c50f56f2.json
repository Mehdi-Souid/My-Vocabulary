{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Vocabulary\\\\vocab-builder\\\\client\\\\src\\\\components\\\\AddWordForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './AddWordForm.css'; // Add this line\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddWordForm = ({\n  onAddWord,\n  onCancel\n}) => {\n  _s();\n  const [word, setWord] = useState('');\n  const [definition, setDefinition] = useState('');\n  const [exampleSentence, setExampleSentence] = useState('');\n\n  // Function to fetch definition from the provided API\n  const handleGenerateDefinition = async () => {\n    try {\n      const definitionResponse = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\n      // Assuming the API returns a list of meanings\n      const meanings = definitionResponse.data[0].meanings;\n      const definitionsList = meanings.map(meaning => meaning.definitions[0].definition);\n      const exampleSentenceList = meanings.map(meaning => meaning.definitions[0].example);\n\n      // Set the first definition and example sentence for simplicity\n      setDefinition(definitionsList[0] || 'No definition found');\n      setExampleSentence(exampleSentenceList[0] || ''); // Set to blank instead of a default message\n    } catch (error) {\n      console.error('Error generating definition:', error);\n      setDefinition('Error fetching definition');\n      setExampleSentence(''); // Clear example sentence on error\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddWord({\n      word,\n      definition,\n      exampleSentence\n    });\n    setWord('');\n    setDefinition('');\n    setExampleSentence('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Word:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: word,\n        onChange: e => setWord(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Definition:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: definition,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleGenerateDefinition,\n        children: \"Generate Definition\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Example Sentence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: exampleSentence,\n        onChange: e => setExampleSentence(e.target.value) // Allow manual input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AddWordForm, \"tIwOoazKqaSGR6AArZRwYecyuqk=\");\n_c = AddWordForm;\nexport default AddWordForm;\nvar _c;\n$RefreshReg$(_c, \"AddWordForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddWordForm","onAddWord","onCancel","_s","word","setWord","definition","setDefinition","exampleSentence","setExampleSentence","handleGenerateDefinition","definitionResponse","get","meanings","data","definitionsList","map","meaning","definitions","exampleSentenceList","example","error","console","handleSubmit","e","preventDefault","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","readOnly","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Vocabulary/vocab-builder/client/src/components/AddWordForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './AddWordForm.css';  // Add this line\r\n\r\nconst AddWordForm = ({ onAddWord, onCancel }) => {\r\n  const [word, setWord] = useState('');\r\n  const [definition, setDefinition] = useState('');\r\n  const [exampleSentence, setExampleSentence] = useState('');\r\n\r\n  // Function to fetch definition from the provided API\r\n  const handleGenerateDefinition = async () => {\r\n    try {\r\n      const definitionResponse = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`);\r\n      // Assuming the API returns a list of meanings\r\n      const meanings = definitionResponse.data[0].meanings;\r\n      const definitionsList = meanings.map(meaning => meaning.definitions[0].definition);\r\n      const exampleSentenceList = meanings.map(meaning => meaning.definitions[0].example);\r\n\r\n      // Set the first definition and example sentence for simplicity\r\n      setDefinition(definitionsList[0] || 'No definition found');\r\n      setExampleSentence(exampleSentenceList[0] || ''); // Set to blank instead of a default message\r\n    } catch (error) {\r\n      console.error('Error generating definition:', error);\r\n      setDefinition('Error fetching definition');\r\n      setExampleSentence(''); // Clear example sentence on error\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAddWord({ word, definition, exampleSentence });\r\n    setWord('');\r\n    setDefinition('');\r\n    setExampleSentence('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Word:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={word}\r\n          onChange={(e) => setWord(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Definition:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={definition}\r\n          readOnly\r\n        />\r\n        <button type=\"button\" onClick={handleGenerateDefinition}>\r\n          Generate Definition\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <label>Example Sentence:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={exampleSentence}\r\n          onChange={(e) => setExampleSentence(e.target.value)} // Allow manual input\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Word</button>\r\n      <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddWordForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}