{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Vocabulary\\\\vocab-builder\\\\client\\\\src\\\\components\\\\VocabularyContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport AddWordForm from './AddWordForm';\nimport VocabularyCard from './VocabularyCard';\nimport SuggestedWordCard from './SuggestedWordCard';\nimport '../styles/Vocabulary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:3000/api/vocab';\nconst VocabularyContainer = () => {\n  _s();\n  const [vocabularyList, setVocabularyList] = useState([]);\n  const [userId, setUserId] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  const [suggestedWords, setSuggestedWords] = useState([]);\n\n  // Fetch user vocabulary\n  useEffect(() => {\n    const fetchVocabulary = async () => {\n      try {\n        const userIdFromStorage = localStorage.getItem('userId');\n        if (userIdFromStorage) {\n          setUserId(userIdFromStorage);\n          const response = await axios.get(`${API_URL}?userId=${userIdFromStorage}`);\n          setVocabularyList(response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching vocabulary:', error);\n      }\n    };\n    fetchVocabulary();\n  }, []);\n  const fetchSuggestedWords = async () => {\n    if (!userId) return;\n    try {\n      const response = await axios.get(`${API_URL}/suggestions/${userId}`);\n      setSuggestedWords(response.data);\n    } catch (error) {\n      console.error('Error fetching suggested words:', error);\n    }\n  };\n\n  // Additional event handlers can be passed as props to child components\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vocabulary-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: handleLogout,\n      onEditProfile: handleEditProfile,\n      onAddClick: () => setShowAddForm(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vocabulary-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Vocabulary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddWordForm, {\n        onAddWord: handleAddWord,\n        onCancel: () => setShowAddForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vocabulary-cards\",\n        children: vocabularyList.map(vocab => /*#__PURE__*/_jsxDEV(VocabularyCard, {\n          vocab: vocab,\n          onDelete: handleDeleteWord,\n          onUpdate: handleUpdateWord\n        }, vocab._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), suggestedWords.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggested-words\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Suggested Words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), suggestedWords.map(suggestedWord => /*#__PURE__*/_jsxDEV(SuggestedWordCard, {\n          suggestedWord: suggestedWord,\n          onAdd: handleAddSuggestedWord\n        }, suggestedWord.word, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(VocabularyContainer, \"y4sFkRwXssNtYXzCdsZDxiItGlY=\");\n_c = VocabularyContainer;\nexport default VocabularyContainer;\nvar _c;\n$RefreshReg$(_c, \"VocabularyContainer\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","AddWordForm","VocabularyCard","SuggestedWordCard","jsxDEV","_jsxDEV","API_URL","VocabularyContainer","_s","vocabularyList","setVocabularyList","userId","setUserId","showAddForm","setShowAddForm","suggestedWords","setSuggestedWords","fetchVocabulary","userIdFromStorage","localStorage","getItem","response","get","data","error","console","fetchSuggestedWords","className","children","onLogout","handleLogout","onEditProfile","handleEditProfile","onAddClick","fileName","_jsxFileName","lineNumber","columnNumber","onAddWord","handleAddWord","onCancel","map","vocab","onDelete","handleDeleteWord","onUpdate","handleUpdateWord","_id","length","suggestedWord","onAdd","handleAddSuggestedWord","word","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Vocabulary/vocab-builder/client/src/components/VocabularyContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport AddWordForm from './AddWordForm';\r\nimport VocabularyCard from './VocabularyCard';\r\nimport SuggestedWordCard from './SuggestedWordCard';\r\nimport '../styles/Vocabulary.css';\r\n\r\nconst API_URL = 'http://localhost:3000/api/vocab';\r\n\r\nconst VocabularyContainer = () => {\r\n  const [vocabularyList, setVocabularyList] = useState([]);\r\n  const [userId, setUserId] = useState(null);\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [suggestedWords, setSuggestedWords] = useState([]);\r\n\r\n  // Fetch user vocabulary\r\n  useEffect(() => {\r\n    const fetchVocabulary = async () => {\r\n      try {\r\n        const userIdFromStorage = localStorage.getItem('userId');\r\n        if (userIdFromStorage) {\r\n          setUserId(userIdFromStorage);\r\n          const response = await axios.get(`${API_URL}?userId=${userIdFromStorage}`);\r\n          setVocabularyList(response.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching vocabulary:', error);\r\n      }\r\n    };\r\n    fetchVocabulary();\r\n  }, []);\r\n\r\n  const fetchSuggestedWords = async () => {\r\n    if (!userId) return;\r\n    try {\r\n      const response = await axios.get(`${API_URL}/suggestions/${userId}`);\r\n      setSuggestedWords(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching suggested words:', error);\r\n    }\r\n  };\r\n\r\n  // Additional event handlers can be passed as props to child components\r\n\r\n  return (\r\n    <div className=\"vocabulary-container\">\r\n      <Sidebar onLogout={handleLogout} onEditProfile={handleEditProfile} onAddClick={() => setShowAddForm(true)} />\r\n      \r\n      <div className=\"vocabulary-content\">\r\n        <h2>Your Vocabulary</h2>\r\n        {showAddForm && (\r\n          <AddWordForm onAddWord={handleAddWord} onCancel={() => setShowAddForm(false)} />\r\n        )}\r\n        \r\n        <div className=\"vocabulary-cards\">\r\n          {vocabularyList.map((vocab) => (\r\n            <VocabularyCard key={vocab._id} vocab={vocab} onDelete={handleDeleteWord} onUpdate={handleUpdateWord} />\r\n          ))}\r\n        </div>\r\n\r\n        {suggestedWords.length > 0 && (\r\n          <div className=\"suggested-words\">\r\n            <h2>Suggested Words</h2>\r\n            {suggestedWords.map((suggestedWord) => (\r\n              <SuggestedWordCard key={suggestedWord.word} suggestedWord={suggestedWord} onAdd={handleAddSuggestedWord} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VocabularyContainer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}