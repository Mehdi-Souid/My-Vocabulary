{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Vocabulary\\\\vocab-builder\\\\client\\\\src\\\\pages\\\\EditProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/EditProfile.css';\nimport { FaHome, FaBook } from 'react-icons/fa'; // Ensure this is imported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditProfile = ({\n  userId\n}) => {\n  _s();\n  // Make sure to receive userId as a prop\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const handleUpdateProfile = async () => {\n    if (!username) {\n      alert(\"Username cannot be empty\");\n      return;\n    }\n    if (newPassword && newPassword !== confirmPassword) {\n      alert(\"Passwords do not match\");\n      return;\n    }\n    try {\n      await axios.put(`/api/users/${userId}`, {\n        username,\n        password: currentPassword ? newPassword : null\n      });\n      alert('Profile updated successfully');\n      navigate('/my-vocabulary');\n    } catch (error) {\n      console.error('Error updating profile:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-profile-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Current Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: currentPassword,\n        onChange: e => setCurrentPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"update-btn\",\n        onClick: handleUpdateProfile,\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-profile-nav\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: () => navigate('/'),\n        children: [/*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), \" Return Home\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: () => navigate('/my-vocabulary'),\n        children: [/*#__PURE__*/_jsxDEV(FaBook, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), \" Return to My Vocabulary\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(EditProfile, \"Vdt31U38nzYwIh+E5T0x0fhtY2E=\", false, function () {\n  return [useNavigate];\n});\n_c = EditProfile;\nexport default EditProfile;\nvar _c;\n$RefreshReg$(_c, \"EditProfile\");","map":{"version":3,"names":["React","useState","axios","useNavigate","FaHome","FaBook","jsxDEV","_jsxDEV","EditProfile","userId","_s","username","setUsername","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","navigate","handleUpdateProfile","alert","put","password","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Vocabulary/vocab-builder/client/src/pages/EditProfile.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/EditProfile.css';\r\nimport { FaHome, FaBook } from 'react-icons/fa'; // Ensure this is imported\r\n\r\nconst EditProfile = ({ userId }) => { // Make sure to receive userId as a prop\r\n  const [username, setUsername] = useState('');\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleUpdateProfile = async () => {\r\n    if (!username) {\r\n      alert(\"Username cannot be empty\");\r\n      return;\r\n    }\r\n    if (newPassword && newPassword !== confirmPassword) {\r\n      alert(\"Passwords do not match\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.put(`/api/users/${userId}`, {\r\n        username,\r\n        password: currentPassword ? newPassword : null,\r\n      });\r\n      alert('Profile updated successfully');\r\n      navigate('/my-vocabulary');\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-profile-container\">\r\n      <h2>Edit Profile</h2>\r\n      \r\n      <div className=\"edit-profile-form\">\r\n        <label>Username</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n        \r\n        <label>Current Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n        />\r\n        \r\n        <label>New Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n        />\r\n        \r\n        <label>Confirm New Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n        />\r\n        \r\n        <button className=\"update-btn\" onClick={handleUpdateProfile}>Update Profile</button>\r\n      </div>\r\n\r\n      <div className=\"edit-profile-nav\">\r\n        <button className=\"nav-btn\" onClick={() => navigate('/')}>\r\n          <FaHome /> Return Home\r\n        </button>\r\n        <button className=\"nav-btn\" onClick={() => navigate('/my-vocabulary')}>\r\n          <FaBook /> Return to My Vocabulary\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}